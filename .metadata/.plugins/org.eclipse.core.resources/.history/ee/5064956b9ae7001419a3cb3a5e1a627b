package performance;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBObject;
import com.mongodb.DBCursor;
import com.mongodb.MongoClient;
import com.mongodb.QueryBuilder;

/**
 * 
 * @author John Cutsavage
 * @author Sharmeen Jahan
 * @author Drew Whittaker
 *
 * MongoDB implementation of Query class.
 */
public class MongoDBQuery extends Query {
	
	private MongoClient client;
	private DB employeeDB;
	private DBCollection empColl, deptColl, mgrColl, salColl, titleColl, deptEmpColl;
	
	public void run(){
		initConnection();
		managerSalaries();
	}
	
	/**
	 * Sets up the connection to Mongo server
	 */
	public void initConnection(){
		try{   
	    	  // To connect to mongodb server
	         client = new MongoClient( "localhost" , 27017 );
	         
	         // Now use the employee database
	         employeeDB = client.getDB( "employees" );
	         
	         empColl = employeeDB.getCollection("employees");
	         deptColl = employeeDB.getCollection("departments");
	         mgrColl = employeeDB.getCollection("dept_manager");
	         salColl = employeeDB.getCollection("salaries");
	         titleColl = employeeDB.getCollection("titles");
	         deptEmpColl = employeeDB.getCollection("dept_emp");
	      }
	      catch (Exception e)
	      {
	    	  System.out.println(e.getMessage());
	      }
	}
	
	/**
	 * Mongo Implementation of abstract method.
	 * List all managers, their departments, and their salaries.
	 */
	public void managerSalaries(){
		try {
			
			long startTime = System.currentTimeMillis();
			
			
			
			long endTime = System.currentTimeMillis();
			
			long totalTime = endTime - startTime;
			
			System.out.println("Total time to execute query: " + totalTime + " milliseconds");
			}
		catch (Exception e) {
			e.printStackTrace();
		}
	}
}
